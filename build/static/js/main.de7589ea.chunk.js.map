{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","storedExpenses","JSON","parse","localStorage","getItem","console","log","App","expensesArray","setExpensesArray","setItem","stringify","i","prevExpenses","fromJson","unshift","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.de7589ea.chunk.js","sourcesContent":["import './Card.css';\r\n\r\nfunction Card(props) {\r\n    const classes = `card ${props.className}`;\r\n    return (\r\n        <div className={classes}>{props.children}</div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\n\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n  const changeYearHandler = (e) => {\r\n    props.onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={changeYearHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n\r\n    <div className='expense-date'>\r\n      \r\n      <div className='expense-date__month'>{month}</div>\r\n      <div className='expense-date__year'>{year}</div>\r\n      <div>{props.children}</div>\r\n      <div className='expense-date__day'>{day}</div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import './ExpenseItem.css';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n  return (\r\n    <li>\r\n      <Card className='expense-item'>\r\n        <ExpenseDate date={props.date}/>\r\n        <div className='expense-item__description'>\r\n          <h2>{props.title}</h2>\r\n          <div className='expense-item__price'>${props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from './ExpenseItem';\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n    \r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;","import React from 'react';\r\n\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = '0%';\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n  }\r\n\r\n  return (\r\n    <div className='chart-bar'>\r\n      <div className='chart-bar__inner'>\r\n        <div\r\n          className='chart-bar__fill'\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className='chart-bar__label'>{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;","import React from 'react';\r\n\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css';\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\n\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: 'Jan', value: 0 },\r\n    { label: 'Feb', value: 0 },\r\n    { label: 'Mar', value: 0 },\r\n    { label: 'Apr', value: 0 },\r\n    { label: 'May', value: 0 },\r\n    { label: 'Jun', value: 0 },\r\n    { label: 'Jul', value: 0 },\r\n    { label: 'Aug', value: 0 },\r\n    { label: 'Sep', value: 0 },\r\n    { label: 'Oct', value: 0 },\r\n    { label: 'Nov', value: 0 },\r\n    { label: 'Dec', value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at 0 => January => 0\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2022');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;","import { useState } from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    const [enteredTitle,setEnteredTitle] = useState('');\r\n    const [enteredAmount,setEnteredAmount] = useState('');\r\n    const [enteredDate,setEnteredDate] = useState('');\r\n    // const [userInput,setUserInput] = useState({\r\n    //     enteredTitle:'',\r\n    //     enteredAmount:'',\r\n    //     enteredDate:'',\r\n    // })\r\n\r\n    const titleChangeHandler = (e) => {\r\n        setEnteredTitle(e.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle:e.target.value\r\n        // });\r\n        // setUserInput( (prevState) => {\r\n        //     return { ...prevState,enteredTitle: e.target.value}\r\n        // } )\r\n    };\r\n\r\n    const amountChangeHandler = (e) => {\r\n        setEnteredAmount(e.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount:e.target.value\r\n        // });\r\n        // setUserInput( (prevState) => {\r\n        //     return { ...prevState,enteredAmount: e.target.value}\r\n        // } )\r\n    };\r\n\r\n    const dateChangeHandler = (e) => {\r\n        setEnteredDate(e.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate:e.target.value\r\n        // });\r\n        // setUserInput( (prevState) => {\r\n        //     return { ...prevState,enteredDate: e.target.value}\r\n        // } )\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        // const expenseData = {\r\n        //     title: userInput.enteredTitle,\r\n        //     amount: userInput.enteredAmount,\r\n        //     date: new Date(userInput.enteredDate)\r\n        // }\r\n          const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        }\r\n        props.onSaveExpenseData(expenseData)\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Amount</label>\r\n                    <input type=\"number\" value={enteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>Date</label>\r\n                    <input type=\"date\" value={enteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                <button type=\"submit\">Add expense</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport default ExpenseForm;","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add new expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nlet expenses = [];\n\nlet storedExpenses = JSON.parse(localStorage.getItem(\"items\"));\n\nconsole.log(storedExpenses);\n\n// if (storedExpenses) {\n//   expenses = storedExpenses;\n// }\n\nconst App = () => {\n\n  const [expensesArray, setExpensesArray] = useState(expenses);\n\n  if (!storedExpenses) {\n    localStorage.setItem(\"items\", JSON.stringify(expensesArray));\n    console.log(\"vds\");\n  }\n\n  const addExpenseHandler = (expense) => {\n    setExpensesArray((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n    let fromJson = JSON.parse(localStorage.getItem(\"items\"));\n    fromJson.unshift(expense);\n    localStorage.setItem(\"items\", JSON.stringify(fromJson));\n  };\n\n  if (storedExpenses) {\n    storedExpenses = JSON.parse(localStorage.getItem(\"items\"));\n    for (let i = 0; i < storedExpenses.length; i++) {\n      storedExpenses[i].date = new Date(storedExpenses[i].date);\n    }\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      {storedExpenses && <Expenses items={storedExpenses} />}\n      {!storedExpenses && <Expenses items={expensesArray} />}\n    </div>\n  );\n};\n\nexport default App;\n\n// return React.createElement(\n//   'div',\n//   {},\n//   React.createElement('h2',{},'Let\\'s get started'),\n//   React.createElement(Expenses,{items: expenses})\n// )\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}